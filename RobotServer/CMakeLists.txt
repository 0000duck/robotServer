find_package(Threads)

include_directories(. ../RobotStructure ../RobotInterpreter)
IF (WIN32)
    MESSAGE(STATUS "Now is windows")
    include_directories(../SystemLayer/WindowsAPI)
ELSEIF (APPLE)
    MESSAGE(STATUS "Now is Apple systens.")
ELSEIF (UNIX)
    MESSAGE(STATUS "Now is UNIX-like OS's.")
    include_directories(../SystemLayer/LinuxAPI)
ENDIF ()

IF (SIMULATION)
    MESSAGE(STATUS "System for simulation")
    include_directories(../LinkLayer/Simulation)
ELSEIF (ETHERCAT)
    MESSAGE(STATUS "System with EtherCAT")
    include_directories(../LinkLayer/EtherCAT)
ELSEIF (CANOPEN)
    MESSAGE(STATUS "System with CANopen")
    include_directories(../LinkLayer/CANopen)
ELSEIF (AXI)
    MESSAGE(STATUS "System with AXI")
    include_directories(../LinkLayer/AXI)
ELSEIF (RS485)
    MESSAGE(STATUS "System with RS485")
    include_directories(../LinkLayer/RS485)
ENDIF ()

aux_source_directory(src DIR_ROBOTSERVER_SRCS)
add_library(RobotServer ${DIR_ROBOTSERVER_SRCS})
target_link_libraries(RobotServer ${CMAKE_THREAD_LIBS_INIT})
